name: Build Docker image

on: [push, pull_request]

# env:
#   IMAGE_NAME: sample-server-asyncio

jobs:
  # Push image to GitHub Packages.
 docker:
    runs-on: ubuntu-22.04
    env:
      # Check if this is not a pull request andGITHUB_TOKEN is set
      # As all env variables are strings, you need to compare
      # against "== 'true'" (not "== true")
      IS_NOT_PR: "${{ !github.head_ref && true }}"
    steps:
      - name: Checkout Sample-Server
        uses: actions/checkout@v4
        with:
          path: Sample-Server
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: PrepareReg Names
        run: |
          echo IMAGE_REPOSITORY="$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"
          echo IMAGE_TAG="$(echo "${{ github.ref }}" | tr '[:upper:]' '[:lower:]' |  awk '{sub(/([^\/]*\/){2}/,""); gsub(/\/|_/, "-")}1')" >> "$GITHUB_ENV"
          echo IS_NOT_PR="${{ env.IS_NOT_PR }})"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        if: env.IS_NOT_PR == 'true' && ${{ github.actor }} != 'dependabot'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Release
        uses: "docker/build-push-action@v4.0.0"
        with:
          provenance: false
          file: "./Sample-Server/Dockerfile"
          context: ./Sample-Server
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          push: ${{env.IS_NOT_PR == 'true'}}
          tags: |
            ghcr.io/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}






  
  # build:
  
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push'

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Build image
  #       run: docker build . --file Dockerfile --tag $IMAGE_NAME

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2.1.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Push image to GitHub Container Registry
  #       run: |
  #         IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

  #         # Change all uppercase to lowercase
  #         IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

  #         # Strip git ref prefix from version
  #         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

  #         # Strip "v" prefix from tag name
  #         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

  #         # Use Docker `latest` tag convention
  #         [ "$VERSION" == "master" ] && VERSION=latest

  #         echo IMAGE_ID=$IMAGE_ID
  #         echo VERSION=$VERSION

  #         docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
  #         docker push $IMAGE_ID:$VERSION
